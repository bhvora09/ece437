`ifndef IDECODE_IEXEC_IF_VH
`define IDECODE_IEXEC_IF_VH

// all types
`include "cpu_types_pkg.vh"

interface idecode_iexec_if;
    // import types
    import cpu_types_pkg::*;

    //in
    logic dWEN_in, dREN_in;
    word_t rdat1, rdat2, nxt_pc_in;
    logic [4:0] rs, rt, rd;
    logic [15:0] imm_addr;
    logic lui_s_in, jal_s_in;
    logic RegDst_in, ALUsrc_in, ALUctr_in;

    //out
    logic dWEN_out, dREN_out;
    logic jal_s_out, RegDst_out, ALUsrc_out, ALUctr_out;
    word_t nxt_pc_out;
    word_t rdat1_out, rdat2_out;
    logic [4:0] rs_out, rt_out, rd_out;
    logic [15:0] imm_addr_out;
    logic lui_s_out;


    
    modport idie (
        input dWEN_in, dREN_in, rdat1, rdat2, nxt_pc_in, rs, rt, rd, imm_addr, lui_s_in, jal_s_in, RegDst_in, ALUsrc_in, ALUctr_in,
        output dWEN_out, dREN_out, jal_s_out, RegDst_out, ALUsrc_out, ALUctr_out, nxt_pc_out, rdat1_out, rdat2_out, rs_out, rt_out, rd_out, imm_addr_out, lui_s_out
    );

    modport tb (
        input dWEN_out, dREN_out, jal_s_out, RegDst_out, ALUsrc_out, ALUctr_out, nxt_pc_out, rdat1_out, rdat2_out, rs_out, rt_out, rd_out, imm_addr_out, lui_s_out,
        output dWEN_in, dREN_in, rdat1, rdat2, nxt_pc_in, rs, rt, rd, imm_addr, lui_s_in, jal_s_in, RegDst_in, ALUsrc_in, ALUctr_in,
    );
endinterface

`endif //IDECODE_IEXEC_IF_VH